---

- name: Check if JetBrains Toolbox is already installed
  stat:
    path: ~/.local/share/JetBrains/Toolbox
  register: st_jetbrains_toolbox

- block:
    - name: Get available releases
      uri:
        url: https://data.services.jetbrains.com/products/releases?code=TBA&type=release
        method: GET
      register: jetbrains_toolbox_available_releases

    - name: Get versions
      set_fact:
        jetbrains_toolbox_versions: "{{ jetbrains_toolbox_available_releases.json.TBA | map(attribute='version') | list }}"

    - name: Update version fact if latest is overridden
      set_fact:
        jetbrains_toolbox_version: "{{ jetbrains_toolbox_available_releases.json.TBA | sort(attribute='date', reverse=True) | map(attribute='version') | list | first }}"
      when: jetbrains_toolbox_version == 'latest'

    - name: Check if version is valid
      assert:
        that: (jetbrains_toolbox_version | string) in jetbrains_toolbox_versions
        msg: "The value of jetbrains_toolbox_version ({{ jetbrains_toolbox_version }}) is invalid. Available options are {{ jetbrains_toolbox_versions | join(', ') }}"

    - name: Create temporary download directory
      tempfile:
        state: directory
        suffix: ".jetbrains_toolbox_download"
      register: jetbrains_toolbox_download_dir
      changed_when: no

    - name: Download JetBrains Toolbox
      get_url:
        url: "{{ jetbrains_toolbox_available_releases.json | json_query(jetbrains_toolbox_download_query) | first }}"
        dest: "{{ jetbrains_toolbox_download_dir.path }}/jetbrains_toolbox.tar.gz"
        checksum: "sha256:{{ lookup('url', jetbrains_toolbox_available_releases.json | json_query(jetbrains_toolbox_checksum_link) | first) | regex_search('[A-Fa-f0-9]{64}') }}"
      vars:
        jetbrains_toolbox_download_query: "TBA[?version == '{{ jetbrains_toolbox_version }}'].downloads.linux.link"
        jetbrains_toolbox_checksum_link: "TBA[?version == '{{ jetbrains_toolbox_version }}'].downloads.linux.checksumLink"

    - name: Unpack install archive
      unarchive:
        src: "{{ jetbrains_toolbox_download_dir.path }}/jetbrains_toolbox.tar.gz"
        dest: "{{ jetbrains_toolbox_download_dir.path }}"
        list_files: yes
        remote_src: yes
      register: jetbrains_toolbox_unarchive

    - name: Install JetBrains Toolbox
      command: "{{ jetbrains_toolbox_download_dir.path }}/{{ jetbrains_toolbox_unarchive.files | first }}/jetbrains-toolbox --install"
  when: st_jetbrains_toolbox.stat.exists == False
  always:
    - name: Delete temporary download directory
      file:
        path: "{{ jetbrains_toolbox_download_dir.path }}"
        state: absent
      changed_when: no
